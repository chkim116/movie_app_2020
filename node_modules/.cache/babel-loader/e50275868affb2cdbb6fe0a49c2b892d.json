{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Movie from \"./component/Movie\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(HashRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"\",\n    component: Movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Route, {\n    path: \"/introduce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"introduce\")), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"About\")));\n} // route에는 중요한 게 두개 들어간다. 하나는 렌더링할 스크린, 다른 prop는 뭐할지 들어간다\n// path로 들어가서 component를 보여줘라! 여기선 about\n//  path는 이름이 뭐 어떻든 상관없다. 이름이 같을 필요는없다\n// path는 url 주소라고 생각하면 된다.\n// 예로 http://localhost:3001/movie_app_2020#/about일때랑 http://localhost:3001/movie_app_2020#/ 일떄랑 다르다.\n// 전자에선 about이, 후자에선 home이 나온다\n// 리액트는 url에 따라 보여주는 게 다르게 설정할 수 있다. /home/introduce/about 하면 다 보이고  /home/introduce면 두개만 /home이면 하나만 아니면 없다.\n// exact ={true}는 오직 정한 url이 맞아들었을때만 렌더링 해준다.\n//  path는 url의 경로, component는 어떤 걸 보여줄 건지 결정\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/movie_app_2020/src/App.js"],"names":["React","HashRouter","Route","Home","About","Movie","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,EAAZ;AAAe,IAAA,SAAS,EAAED,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,eAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CALF,eAQE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CARF,CADF;AAcD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeC,GAAf","sourcesContent":["import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Movie from \"./component/Movie\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"\" component={Movie} />\n      <Route path=\"/home\">\n        <h1>Home</h1>\n      </Route>\n      <Route path=\"/introduce\">\n        <h2>introduce</h2>\n      </Route>\n      <Route path=\"/about\">\n        <h1>About</h1>\n      </Route>\n    </HashRouter>\n  );\n}\n// route에는 중요한 게 두개 들어간다. 하나는 렌더링할 스크린, 다른 prop는 뭐할지 들어간다\n// path로 들어가서 component를 보여줘라! 여기선 about\n//  path는 이름이 뭐 어떻든 상관없다. 이름이 같을 필요는없다\n// path는 url 주소라고 생각하면 된다.\n// 예로 http://localhost:3001/movie_app_2020#/about일때랑 http://localhost:3001/movie_app_2020#/ 일떄랑 다르다.\n// 전자에선 about이, 후자에선 home이 나온다\n// 리액트는 url에 따라 보여주는 게 다르게 설정할 수 있다. /home/introduce/about 하면 다 보이고  /home/introduce면 두개만 /home이면 하나만 아니면 없다.\n// exact ={true}는 오직 정한 url이 맞아들었을때만 렌더링 해준다.\n//  path는 url의 경로, component는 어떤 걸 보여줄 건지 결정\nexport default App;\n"]},"metadata":{},"sourceType":"module"}