{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import Axios from\"axios\";import Movie from\"./Movie\";import\"./App.css\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoading:true,movies:[]};_this.getMovie=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Axios$get,movies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=download_count\"// ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\n);case 2:_yield$Axios$get=_context.sent;movies=_yield$Axios$get.data.data.movies;_this.setState({movies:movies,isLoading:false});// movies:movies는 movies와 같다.\n// 로딩을 완료한 후 we are ready!를 출력\ncase 5:case\"end\":return _context.stop();}}},_callee);}));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.getMovie();}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,movies=_this$state.movies;return/*#__PURE__*/React.createElement(\"section\",{className:\"section\"},isLoading?/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"},/*#__PURE__*/React.createElement(\"div\",{className:\"loading__text\"},\"Please one seconds!\")):/*#__PURE__*/React.createElement(\"div\",{className:\"movies\"},movies.map(function(movie){return/*#__PURE__*/React.createElement(Movie,{key:movie.id,id:movie.id,year:movie.year,rating:movie.rating,title:movie.title,summary:movie.summary,poster:movie.medium_cover_image,genres:movie.genres});})));}}]);return App;}(React.Component);// this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\n// 그래서 App.state.count라고 생각하면 된다.\n// div안에 있어야 한다. (태그안에)\nexport default App;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/movie_app_2020/src/App.js"],"names":["React","Axios","Movie","App","state","isLoading","movies","getMovie","get","data","setState","map","movie","id","year","rating","title","summary","medium_cover_image","genres","Component"],"mappings":"2/BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,C,GAEMC,CAAAA,G,2TACJC,K,CAAQ,CACNC,SAAS,CAAE,IADL,CAENC,MAAM,CAAE,EAFF,C,OAKRC,Q,sEAAW,qLAKCN,CAAAA,KAAK,CAACO,GAAN,CACR,+DACA;AAFQ,CALD,uCAGGF,MAHH,kBAEPG,IAFO,CAGLA,IAHK,CAGGH,MAHH,CAST,MAAKI,QAAL,CAAc,CAAEJ,MAAM,CAAEA,MAAV,CAAkBD,SAAS,CAAE,KAA7B,CAAd,EAAqD;AACrD;AAVS,sD,8FAaS,CAClB,KAAKE,QAAL,GACD,C,uCACQ,iBACuB,KAAKH,KAD5B,CACCC,SADD,aACCA,SADD,CACYC,MADZ,aACYA,MADZ,CAEP,mBACE,+BAAS,SAAS,CAAC,SAAnB,EACGD,SAAS,cACR,2BAAK,SAAS,CAAC,SAAf,eACE,2BAAK,SAAS,CAAC,eAAf,wBADF,CADQ,cAKR,2BAAK,SAAS,CAAC,QAAf,EACGC,MAAM,CAACK,GAAP,CAAW,SAACC,KAAD,qBACV,oBAAC,KAAD,EACE,GAAG,CAAEA,KAAK,CAACC,EADb,CAEE,EAAE,CAAED,KAAK,CAACC,EAFZ,CAGE,IAAI,CAAED,KAAK,CAACE,IAHd,CAIE,MAAM,CAAEF,KAAK,CAACG,MAJhB,CAKE,KAAK,CAAEH,KAAK,CAACI,KALf,CAME,OAAO,CAAEJ,KAAK,CAACK,OANjB,CAOE,MAAM,CAAEL,KAAK,CAACM,kBAPhB,CAQE,MAAM,CAAEN,KAAK,CAACO,MARhB,EADU,EAAX,CADH,CANJ,CADF,CAwBD,C,iBAhDenB,KAAK,CAACoB,S,EAkDxB;AACA;AACA;AACA,cAAejB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovie = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await Axios.get(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=download_count\"\n      // ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\n    );\n    this.setState({ movies: movies, isLoading: false }); // movies:movies는 movies와 같다.\n    // 로딩을 완료한 후 we are ready!를 출력\n  };\n\n  componentDidMount() {\n    this.getMovie();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"section\">\n        {isLoading ? (\n          <div className=\"loading\">\n            <div className=\"loading__text\">Please one seconds!</div>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                rating={movie.rating}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n// this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\n// 그래서 App.state.count라고 생각하면 된다.\n// div안에 있어야 한다. (태그안에)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}