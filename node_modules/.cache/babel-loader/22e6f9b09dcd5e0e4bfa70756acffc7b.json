{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoding: true,\n      movies: []\n    };\n\n    this.getMovie = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await Axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=download_count\" // ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\n      );\n      this.setState({\n        movies: movies,\n        isLoding: false\n      }); // movies:movies는 movies와 같다.\n      // 로딩을 완료한 후 we are ready!를 출력\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n  render() {\n    const {\n      isLoding,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, isLoding ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loding__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Please one seconds!\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loding__bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loding__bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      rating: movie.rating,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      genres: movie.genres,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n} // this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\n// 그래서 App.state.count라고 생각하면 된다.\n// div안에 있어야 한다. (태그안에)\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/movie_app_2020/src/App.js"],"names":["React","Axios","Movie","App","Component","state","isLoding","movies","getMovie","data","get","setState","componentDidMount","render","map","movie","id","year","rating","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAMhCC,QANgC,GAMrB,YAAY;AACrB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIF,MAAMN,KAAK,CAACS,GAAN,CACR,+DADQ,CAER;AAFQ,OAJV;AAQA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEA,MAAV;AAAkBD,QAAAA,QAAQ,EAAE;AAA5B,OAAd,EATqB,CAS+B;AACpD;AACD,KAjB+B;AAAA;;AAmBhCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKF,KAAlC;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,gBACP;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADO,gBASP;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACO,GAAP,CAAYC,KAAD,iBACV,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,EAAE,EAAED,KAAK,CAACC,EAFZ;AAGE,MAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,MAAA,MAAM,EAAEF,KAAK,CAACG,MAJhB;AAKE,MAAA,KAAK,EAAEH,KAAK,CAACI,KALf;AAME,MAAA,OAAO,EAAEJ,KAAK,CAACK,OANjB;AAOE,MAAA,MAAM,EAAEL,KAAK,CAACM,kBAPhB;AAQE,MAAA,MAAM,EAAEN,KAAK,CAACO,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAVJ,CADF;AA4BD;;AApD+B,C,CAsDlC;AACA;AACA;;;AACA,eAAenB,GAAf","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoding: true,\n    movies: [],\n  };\n\n  getMovie = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await Axios.get(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=download_count\"\n      // ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\n    );\n    this.setState({ movies: movies, isLoding: false }); // movies:movies는 movies와 같다.\n    // 로딩을 완료한 후 we are ready!를 출력\n  };\n\n  componentDidMount() {\n    this.getMovie();\n  }\n  render() {\n    const { isLoding, movies } = this.state;\n    return (\n      <section className=\"section\">\n        {isLoding ? (\n          <div className=\"loding\">\n            <div className=\"loding__text\">\n              Please one seconds!\n              <div className=\"loding__bar\"></div>\n              <div className=\"loding__bar\"></div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                rating={movie.rating}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n// this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\n// 그래서 App.state.count라고 생각하면 된다.\n// div안에 있어야 한다. (태그안에)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}