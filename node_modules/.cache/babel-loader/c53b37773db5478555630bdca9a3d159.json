{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\movie_app_2020\\\\src\\\\routes\\\\Home.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"../component/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovie = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        } // 데이터 안에 데이터 안에 movies.\n\n      } = await Axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=like_count\" // ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\n      );\n      this.setState({\n        movies: movies,\n        isLoading: false\n      }); // movies:movies는 movies와 같다.\n      // 로딩을 완료한 후 we are ready!를 출력\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    console.log({\n      isLoading,\n      movies\n    }); // const {} 여기 안에는 ,, 음..\n\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Please one seconds!\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      rating: movie.rating,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      genres: movie.genres,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n} // this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\n// 그래서 App.state.count라고 생각하면 된다.\n// div안에 있어야 한다. (태그안에)\n\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/movie_app_2020/src/routes/Home.js"],"names":["React","Axios","Movie","Home","Component","state","isLoading","movies","getMovie","data","get","setState","componentDidMount","render","console","log","map","movie","id","year","rating","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyB;;AAAA,SAMjCC,QANiC,GAMtB,YAAY;AACrB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF,SADF,CAIJ;;AAJI,UAKF,MAAMN,KAAK,CAACS,GAAN,CACR,2DADQ,CAER;AAFQ,OALV;AASA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEA,MAAV;AAAkBD,QAAAA,SAAS,EAAE;AAA7B,OAAd,EAVqB,CAUgC;AACrD;AACD,KAlBgC;AAAA;;AAoBjCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAET,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAZ,EAFO,CAGP;;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADQ,gBAKR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACV,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,EAAE,EAAED,KAAK,CAACC,EAFZ;AAGE,MAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,MAAA,MAAM,EAAEF,KAAK,CAACG,MAJhB;AAKE,MAAA,KAAK,EAAEH,KAAK,CAACI,KALf;AAME,MAAA,OAAO,EAAEJ,KAAK,CAACK,OANjB;AAOE,MAAA,MAAM,EAAEL,KAAK,CAACM,kBAPhB;AAQE,MAAA,MAAM,EAAEN,KAAK,CAACO,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CANJ,CADF;AAwBD;;AAnDgC,C,CAqDnC;AACA;AACA;;;AACA,eAAerB,IAAf","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport Movie from \"../component/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovie = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n      // 데이터 안에 데이터 안에 movies.\r\n    } = await Axios.get(\r\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=like_count\"\r\n      // ?sort_by=download_count 를 url뒤에 붙여 놓으면 다운로드 카운트 순서대로 나온다.\r\n    );\r\n    this.setState({ movies: movies, isLoading: false }); // movies:movies는 movies와 같다.\r\n    // 로딩을 완료한 후 we are ready!를 출력\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovie();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    console.log({ isLoading, movies });\r\n    // const {} 여기 안에는 ,, 음..\r\n    return (\r\n      <section className=\"section\">\r\n        {isLoading ? (\r\n          <div className=\"loading\">\r\n            <div className=\"loading__text\">Please one seconds!</div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                rating={movie.rating}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n// this는 상위에 있는 선언한 객체를 불러온다고 생각하면된다. 여기서는 App을 뜻한다.\r\n// 그래서 App.state.count라고 생각하면 된다.\r\n// div안에 있어야 한다. (태그안에)\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}