{"ast":null,"code":"import React from\"react\";function Movie(_ref){var id=_ref.id,year=_ref.year,rating=_ref.rating,title=_ref.title,summary=_ref.summary,poster=_ref.poster,genres=_ref.genres;return/*#__PURE__*/React.createElement(\"div\",{className:\"movie__desc\"},/*#__PURE__*/React.createElement(\"div\",{className:\"movie__img\"},/*#__PURE__*/React.createElement(\"img\",{src:poster,alt:title,title:title}),/*#__PURE__*/React.createElement(\"div\",{className:\"movie__title-box\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"movie__title\"},title))),/*#__PURE__*/React.createElement(\"div\",{className:\"movie__desc-det\"},/*#__PURE__*/React.createElement(\"div\",{className:\"movie__sub\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"movie__year\"},\"Year \",year),/*#__PURE__*/React.createElement(\"h5\",{className:\"movie__rating\"},\"Rating \",rating)),/*#__PURE__*/React.createElement(\"ul\",{className:\"movie__genr\"},genres.map(function(genr,index){return/*#__PURE__*/React.createElement(\"li\",{key:index,className:\"genr__list\"},genr);})),/*#__PURE__*/React.createElement(\"p\",{className:\"movie__sum\"},summary.slice(0,240),\"...\")));}export default Movie;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/movie_app_2020/src/Movie.js"],"names":["React","Movie","id","year","rating","title","summary","poster","genres","map","genr","index","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,KAAT,MAAqE,IAApDC,CAAAA,EAAoD,MAApDA,EAAoD,CAAhDC,IAAgD,MAAhDA,IAAgD,CAA1CC,MAA0C,MAA1CA,MAA0C,CAAlCC,KAAkC,MAAlCA,KAAkC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,MAAU,MAAVA,MAAU,CACnE,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,GAAG,CAAED,MAAV,CAAkB,GAAG,CAAEF,KAAvB,CAA8B,KAAK,CAAEA,KAArC,EADF,cAEE,2BAAK,SAAS,CAAC,kBAAf,eACE,0BAAI,SAAS,CAAC,cAAd,EAA8BA,KAA9B,CADF,CAFF,CADF,cAOE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,0BAAI,SAAS,CAAC,aAAd,UAAkCF,IAAlC,CADF,cAEE,0BAAI,SAAS,CAAC,eAAd,YAAsCC,MAAtC,CAFF,CADF,cAKE,0BAAI,SAAS,CAAC,aAAd,EACGI,MAAM,CAACC,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,qBACV,0BAAI,GAAG,CAAEA,KAAT,CAAgB,SAAS,CAAC,YAA1B,EACGD,IADH,CADU,EAAX,CADH,CALF,cAaE,yBAAG,SAAS,CAAC,YAAb,EAA2BJ,OAAO,CAACM,KAAR,CAAc,CAAd,CAAiB,GAAjB,CAA3B,OAbF,CAPF,CADF,CAyBD,CAYD,cAAeX,CAAAA,KAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movie({ id, year, rating, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie__desc\">\r\n      <div className=\"movie__img\">\r\n        <img src={poster} alt={title} title={title}></img>\r\n        <div className=\"movie__title-box\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"movie__desc-det\">\r\n        <div className=\"movie__sub\">\r\n          <h5 className=\"movie__year\">Year {year}</h5>\r\n          <h5 className=\"movie__rating\">Rating {rating}</h5>\r\n        </div>\r\n        <ul className=\"movie__genr\">\r\n          {genres.map((genr, index) => (\r\n            <li key={index} className=\"genr__list\">\r\n              {genr}\r\n            </li>\r\n          ))}\r\n          {/* 맵은 복제함과 동시에 배열마다의 index값을 줘서 key는 index를 넣어주면된다 */}\r\n        </ul>\r\n        <p className=\"movie__sum\">{summary.slice(0, 240)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}